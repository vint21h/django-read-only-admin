# django-read-only-admin
# Makefile


.ONESHELL:
PHONY: tox test makemessages compilemessages bumpversion build sign check check-build check-upload upload clean coverage help
TEST_PYPI_URL=https://test.pypi.org/legacy/
NAME=read_only_admin
EXTENSIONS=py,html,txt
TRASH_DIRS=build dist *.egg-info .tox .mypy_cache __pycache__
TRASH_FILES=.coverage coverage.xml Pipfile.lock
BUILD_TYPES=bdist_wheel sdist
VERSION=`python -c "import configparser; config = configparser.ConfigParser(); config.read('setup.cfg'); print(config['metadata']['version']);"`

tox:
	tox;\

test:
	bash -c 'PYTHONPATH="$$PYTHONPATH:$$PWD" django-admin test $(TESTS) --settings=tests.settings';\

makemessages:
	for locale in `ls $(NAME)/locale`; do\
		django-admin makemessages --locale=$$locale --extension=$(EXTENSIONS);\
	done;\

compilemessages:
	django-admin compilemessages;\

bumpversion:
	git tag -a $(VERSION) -m 'v$(VERSION)';\

build:
	python setup.py $(BUILD_TYPES);\

sign:
	for package in `ls dist`; do\
		gpg -a --detach-sign dist/$$package;\
	done;\

check:
	pre-commit run --all-files;\

check-build:
	twine check dist/*;\

check-upload:
	twine upload --skip-existing -s --repository-url $(TEST_PYPI_URL) dist/*;\

upload:
	twine upload --skip-existing -s dist/*;\

clean:
	for file in $(TRASH_FILES); do\
		find -iname $${file} -print0 | xargs -0 rm -rf;\
	done;\
	for dir in $(TRASH_DIRS); do\
		find -type d -name $${dir} -print0 | xargs -0 rm -rf;\
	done;\

coverage:
	coverage xml;\
	python-codacy-coverage -r coverage.xml;\

help:
	@echo "    help:"
	@echo "        Show this help."
	@echo "    tox:"
	@echo "        Run tox."
	@echo "    test:"
	@echo "        Run tests, can specify tests with 'TESTS' variable."
	@echo "    makemessages:"
	@echo "        Harvest translations."
	@echo "    compilemessages:"
	@echo "        Compile translations."
	@echo "    bumpversion:"
	@echo "        Tag current code revision with version."
	@echo "    build:"
	@echo "        Build python packages, can specify packages types with 'BUILD_TYPES' variable."
	@echo "    sign:"
	@echo "        Sign python packages."
	@echo "    check:"
	@echo "        Perform some code checks."
	@echo "    check-build:"
	@echo "        Run twine checks."
	@echo "    check-upload:"
	@echo "        Uload package to test PyPi using twine."
	@echo "    upload:"
	@echo "        Upload package to PyPi using twine."
	@echo "    clean:"
	@echo "        Recursively delete useless autogenerated files and directories, directories and files list can be overriden through 'TRASH_DIRS' and 'TRASH_FILES' variables."
	@echo "    coverage:"
	@echo "        Generate and upload coverage report to Codacy."
